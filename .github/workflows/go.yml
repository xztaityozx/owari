name: Go

on: 
  push:
    paths: 
      - '**.go'
      - '.github/workflows/**'
      - 'go.mod'
      - 'go.sum'
  pull_request:
    paths: 
      - '**.go'
      - '.github/workflows/**'
      - 'go.mod'
      - 'go.sum'

jobs:
  linter:
    name: "golang-linter"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '>=1.18.0'
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.46.1
    
  test:
    name: Unit Test
    needs: [linter]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - uses: actions/checkout@v3
      - name: before cache
        run: |
          mkdir -p ~/go/pkg/mod
      - uses: actions/cache@v3
        id: cache-go
        with:
          key: ${{ matrix.os }}-go-${{ hashFiles('**/go.sum') }}
          path: ~/go/pkg/mod
          restore-keys: |
            go-${{ matrix.os }}-
      - name: Setup GoLang
        uses: actions/setup-go@v3
        with:
          go-version: '>=1.18.0'
      - name: Get Dependencies
        if: steps.cache-go.outputs.cache-hit != 'true'
        run: go get -v -t -d ./...

      - name: Test
        run: |
          go test -v ./...
          
      - uses: xztaityozx/owari-action@v1
        with:
          as-summary: true
          args: 'kanban -a xztaityozx/owari "$(go run main.go --version)"'

  release:
    needs: [linter, test]
    if: contains(github.ref, 'tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '>=1.18.0'
      - uses: goreleaser/goreleaser-action@v2
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
